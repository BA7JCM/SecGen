<?xml version="1.0"?>

<scenario xmlns="http://www.github/cliffe/SecGen/scenario"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.github/cliffe/SecGen/scenario">

  <name>Understanding Software Vulnerabilities: Injection Attacks, Race Conditions, and Format String Attacks</name>
  <author>Z. Cliffe Schreuders</author>
  <description>
    # Introduction
    Software vulnerabilities can have severe consequences, stemming from design and implementation problems. These problems can range from simple memory errors and bounds checking, like buffer overflows, to more complex issues such as race conditions, format string attacks, and misconfigured security mechanisms. In this lab you will learn to identify and understand these programming flaws through hands-on exercises.

    You will explore command injection vulnerabilities. You'll be tasked with creating, compiling, and running and exploiting a C program susceptible to command injection. You will investigate concepts including validation and sanitization, essential for securing your code against malicious input. You will also learn how to use the diff and patch commands to create and apply code patches. You will also investigate and attack time of check to time of use race conditions. Lastly, you'll explore format string attacks, examining their dangers and vulnerabilities.

    By the end of this lab, you will have acquired a deeper understanding of software vulnerabilities and learned practical techniques to identify, prevent, and mitigate these issues in your own code. These skills are invaluable for anyone involved in software development and cybersecurity.

    In your home directory you will find some binaries representing challenges to complete to receive the flags.
  </description>
  <lab_sheet_url>https://docs.google.com/document/d/1GKmNARyF2-RQ-jK1_w4Y7V9vNtXsJvMmvXSbnadyEoE/edit?usp=sharing</lab_sheet_url>

  <type>ctf-lab</type>
  <type>lab-sheet</type>
  <difficulty>intermediate</difficulty>

  <CyBOK KA="SS" topic="Categories of Vulnerabilities">
    <keyword>race condition vulnerabilities</keyword>
    <keyword>structured output generation vulnerabilities</keyword>
    <keyword>Format string attacks</keyword>
  </CyBOK>
  <CyBOK KA="SS" topic="Prevention of Vulnerabilities">
    <keyword>race condition mitigations</keyword>
    <keyword>structured output generations mitigations</keyword>
  </CyBOK>

  <video>
    <title>Structured Output Generation Vulnerabilities</title>
    <by>Z. Cliffe Schreuders</by>
    <url>https://youtu.be/nVpqjsfii6c</url>
    <type>lecture-prerecorded</type>
    <CyBOK KA="SS" topic="Categories of Vulnerabilities">
      <keyword>structured output generation vulnerabilities</keyword>
    </CyBOK>
    <CyBOK KA="SS" topic="Prevention of Vulnerabilities">
      <keyword>structured output generations mitigations</keyword>
    </CyBOK>
  </video>
  <video>
    <title>Race Conditions and Time of Check to Time of Use TOCTTOU Vulnerabilities</title>
    <by>Z. Cliffe Schreuders</by>
    <url>https://youtu.be/PH73lpG2B1M</url>
    <type>lecture-prerecorded</type>
    <CyBOK KA="SS" topic="Categories of Vulnerabilities">
      <keyword>race condition vulnerabilities</keyword>
    </CyBOK>
    <CyBOK KA="SS" topic="Prevention of Vulnerabilities">
      <keyword>race condition mitigations</keyword>
    </CyBOK>
  </video>
  <video>
    <title>The Format String Vulnerability</title>
    <by>Tom Shaw</by>
    <url>https://youtu.be/Du3fVc_ZLiI</url>
    <type>lecture-prerecorded</type>
    <CyBOK KA="SS" topic="Categories of Vulnerabilities">
      <keyword>Format string attacks</keyword>
    </CyBOK>
  </video>

  <system>
    <system_name>desktop</system_name>
    <base distro="Debian 12" type="desktop" name="KDE"/>

    <utility module_path=".*/reversing_tools"/>

    <input into_datastore="main_account" >
      <generator type="account">
        <input into="username">
          <generator type="random_sanitised_word">
            <input into="wordlist">
              <value>mythical_creatures</value>
            </input>
          </generator>
        </input>
        <input into="password">
          <value>tiaspbiqe2r</value>
        </input>
        <input into="super_user">
          <value>false</value>
        </input>
      </generator>
    </input>

    <utility module_path=".*/parameterised_accounts">
      <input into="accounts">
        <datastore>main_account</datastore>

        <generator type="account">
          <input into="username">
            <value>second</value>
          </input>
          <input into="password">
            <value>tiaspbiqe2r</value>
          </input>
          <input into="super_user">
            <value>false</value>
          </input>
        </generator>
      </input>
    </utility>


    <utility module_path=".*/kde_minimal">
      <input into="autologin_user">
        <datastore access="0" access_json="['username']">main_account</datastore>
      </input>
      <input into="accounts">
        <datastore>main_account</datastore>
      </input>
      <input into="autostart_konsole">
        <value>true</value>
      </input>
    </utility>
    <utility module_path=".*/handy_cli_tools"/>
    <utility module_path=".*/hash_tools"/>

    <utility module_path=".*/metactf">
      <input into="challenge_list">
        <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/Ch3-ExtraFormatStr/Ch3_Format0_Leak</value>
          </input>
        </generator>
        <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/Ch3-ExtraFormatStr/Ch3_Format1_LeakDollar</value>
          </input>
        </generator>
        <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/Ch3-ExtraFormatStr/Ch3_Format2_nCorruptKey</value>
          </input>
        </generator>
        <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/Ch3-ExtraFormatStr/Ch3_Format3_nWriteKey</value>
          </input>
        </generator>
        <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/SSE/Ch_BashInjection_1</value>
          </input>
        </generator>
        <!-- <generator type="metactf_challenge">
          <input into="challenge_path">
            <value>src_sse/SSE/Ch_BashInjection_2</value>
          </input>
        </generator> -->
      </input>
      <input into="account">
        <datastore>main_account</datastore>
      </input>
    </utility>

    <network type="private_network" range="dhcp"/>
    <input into_datastore="spoiler_admin_pass">
      <generator type="strong_password_generator"/>
    </input>
    <build type="cleanup">
      <input into="root_password">
        <datastore>spoiler_admin_pass</datastore>
      </input>
    </build>
  </system>

</scenario>
