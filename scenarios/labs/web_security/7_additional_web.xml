<?xml version="1.0"?>

<scenario xmlns="http://www.github/cliffe/SecGen/scenario"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.github/cliffe/SecGen/scenario">

    <name>Additional Web Challenges</name>
    <author>James Davis</author>
    <description>
# Introduction
Web and Network Security additional CTF challenges.
    </description>
    <lab_sheet_url>https://docs.google.com/document/d/1DDjyBGtB9vaFD6S2s1jQn7_bpVn4UlK-njbmVX5_UiM/edit?usp=sharing</lab_sheet_url>

    <type>lab-environment</type>
    <type>ctf-lab</type>

    <!-- TODO: update cybok -->
    <CyBOK KA="WAM" topic="Fundamental Concepts and Approaches">
        <keyword>web PKI and HTTPS</keyword>
        <keyword>authentication</keyword>
        <keyword>ACCESS CONTROL</keyword>
        <keyword>cookies</keyword>
        <keyword>passwords and alternatives</keyword>
        <keyword>JAVASCRIPT</keyword>
        <keyword>HYPERTEXT MARKUP LANGUAGE (HTML)</keyword>
        <keyword>CASCADING STYLE SHEETS (CSS)</keyword>
        <keyword>HYPERTEXT TRANSFER PROTOCOL (HTTP)</keyword>
        <keyword>HYPERTEXT TRANSFER PROTOCOL (HTTP) - PROXYING</keyword>
        <keyword>DATABASE</keyword>
        <keyword>Broken Access Control / Insecure Direct Object References</keyword>
        <keyword>SESSION HIJACKING</keyword>
        <keyword>CERTIFICATES</keyword>
        <keyword>REPRESENTATIONAL STATE TRANSFER (REST)</keyword>
        <keyword>PERMISSION DIALOG BASED ACCESS CONTROL</keyword>
        <keyword>CLIENT-SERVER MODELS</keyword>
    </CyBOK>
    <CyBOK KA="WAM" topic="Client-Side Vulnerabilities and Mitigations">
        <keyword>client-side storage</keyword>
        <keyword>CLIENT-SIDE VALIDATION</keyword>
        <keyword>clickjacking</keyword>
    </CyBOK>
    <CyBOK KA="WAM" topic="Server-Side Vulnerabilities and Mitigations">
        <keyword>injection vulnerabilities</keyword>
        <keyword>server-side misconfiguration and vulnerable components</keyword>
        <keyword>CROSS-SITE SCRIPTING (XSS)</keyword>
        <keyword>SAME ORIGIN POLICY (SOP)</keyword>
        <keyword>COMMAND INJECTION</keyword>
        <keyword>SQL-INJECTION</keyword>
        <keyword>CROSS-SITE REQUEST FORGERY (CSRF)</keyword>
        <keyword>CONFUSED DEPUTY ATTACKS</keyword>
        <keyword>BACK-END</keyword>
        <keyword>BLIND ATTACKS</keyword>
    </CyBOK>
    <CyBOK KA="SS" topic="Categories of Vulnerabilities">
        <keyword>Web vulnerabilities / OWASP Top 10</keyword>
        <keyword>API vulnerabilities</keyword>
    </CyBOK>
    <CyBOK KA="SS" topic="Prevention of Vulnerabilities">
        <keyword>coding practices</keyword>
        <keyword>Protecting against session management attacks, XSS, SQLi, CSRF</keyword>
        <keyword>API design</keyword>
    </CyBOK>
    <CyBOK KA="SS" topic="Detection of Vulnerabilities">
        <keyword>dynamic detection</keyword>
    </CyBOK>
    <!-- labtainers -->
    <CyBOK KA="SOIM" topic="Monitor: Data Sources">
        <keyword>network traffic</keyword>
    </CyBOK>
    <CyBOK KA="F" topic="Main Memory Forensics">
        <keyword>network connections</keyword>
        <keyword>data recovery and file content carving</keyword>
    </CyBOK>
    <CyBOK KA="NS" topic="Network Defence Tools">
        <keyword>FIREWALLS</keyword>
        <keyword>IPTables</keyword>
        <keyword>VIRTUAL - PRIVATE NETWORK (VPN)</keyword>
    </CyBOK>
    <CyBOK KA="NS" topic="Internet Architecture">
        <keyword>network layer security</keyword>
    </CyBOK>
    <CyBOK KA="WAM" topic="FIREWALLS">
        <keyword>FIREWALLS</keyword>
    </CyBOK>
    
    <system>
        <system_name>web_server</system_name>
        <base distro="Debian 10 Buster amd64" />

        <input into_datastore="IP_addresses">
            <!-- 0 web_server -->
            <value>172.16.0.2</value>
            <!-- 1 kali -->
            <value>172.16.0.3</value>
        </input>

        <utility module_path=".*/parameterised_accounts">
            <input into="accounts">
                <generator type="account">
                    <input into="username">
                        <value>shepherd</value>
                    </input>
                    <input into="password">
                        <value>tiaspbiqe2r</value>
                    </input>
                    <input into="super_user">
                        <value>false</value>
                    </input>
                </generator>
            </input>
        </utility>

        <vulnerability module_path=".*/security_shepherd">
            <input into="modules">
                <generator type="ss_modules">
                    <input into="filter">
                        <value>Insecure C 1 2 3,Unv</value>
                    </input>
                </generator>
            </input>
            <input into="unix_username">
                <value>shepherd</value>
            </input>
            <input into="flag_store" into_datastore="flag_store">
                <generator type="flag_generator" module_path=".*base64">
                    <input into="iterations">
                        <value>4</value>
                    </input>
                </generator>
            </input>
        </vulnerability>

        <input into_datastore="spoiler_admin_pass">
            <generator type="strong_password_generator"/>
        </input>
        <build type="cleanup">
            <input into="root_password">
                <datastore>spoiler_admin_pass</datastore>
            </input>
        </build>

        <utility module_path=".*/hosts">
            <input into="hosts">
                <value>webserver</value>
                <value>kali</value>
            </input>
            <input into="IP_addresses">
                <datastore access="0">IP_addresses</datastore>
                <datastore access="1">IP_addresses</datastore>
            </input>
        </utility>

        <network type="private_network">
            <input into="IP_address">
                <datastore access="0">IP_addresses</datastore>
            </input>
        </network>
    </system>

    <system>
        <system_name>kali</system_name>
        <base distro="Kali" name="MSF" />

        <input into_datastore="kali_account">
            <value>
                {"username":"kali","password":"kali","super_user":"true","strings_to_leak":[],"leaked_filenames":[]}</value>
        </input>

        <utility module_path=".*/parameterised_accounts">
            <input into="accounts">
                <datastore>kali_account</datastore>
            </input>
        </utility>

        <vulnerability module_path=".*/dvwa" />

        <vulnerability module_path=".*/webgoat">
            <input into="port">
                <value>8085</value>
            </input>
        </vulnerability>

        <utility module_path=".*/kali_web" />

        <utility module_path=".*/iceweasel">
            <input into="accounts">
                <datastore>kali_account</datastore>
            </input>
            <input into="autostart">
                <value>true</value>
            </input>
            <input into="start_page">
                <value>webserver</value>
            </input>
        </utility>

        <utility module_path=".*/hosts">
            <input into="hosts">
                <value>webserver</value>
                <value>kali</value>
            </input>
            <input into="IP_addresses">
                <datastore access="0">IP_addresses</datastore>
                <datastore access="1">IP_addresses</datastore>
            </input>
        </utility>

        <build type="cleanup">
            <input into="root_password">
                <datastore>spoiler_admin_pass</datastore>
            </input>
        </build>
        <network type="private_network">
            <input into="IP_address">
                <datastore access="1">IP_addresses</datastore>
            </input>
        </network>
    </system>


</scenario>
